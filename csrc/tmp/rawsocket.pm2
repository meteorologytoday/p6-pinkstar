use v6;
use NativeCall;


struct sockaddr_in {
    short            sin_family;   // e.g. AF_INET
    unsigned short   sin_port;     // e.g. htons(3490)
    struct in_addr   sin_addr;     // see struct in_addr, below
    char             sin_zero[8];  // zero this if you want to
};

struct in_addr {
    unsigned long s_addr;  // load with inet_aton()
};


class sockaddr_in is repr('CStruct') {
	has   int16     $.sin_family;   # e.g. AF_INET
    has  uint16     $.sin_port;     # e.g. htons(3490)
    struct in_addr   sin_addr;      # see struct in_addr, below
    char             sin_zero[8];   # zero this if you want to

    has int16 $.sin_family;
    has num64 $.y;
}




sub socket is native('./socket') { ... }



int socket (PF_INET, SOCK_RAW, IPPROTO_TCP)

sub print(Str) is native('./print') is symbol('print_from_c') { ... }
